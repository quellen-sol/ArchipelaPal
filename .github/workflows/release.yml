name: Draft Release

on:
  push:
    tags:
      - 'v*'

env:
  LINUX_GNU_TARGET: x86_64-unknown-linux-gnu
  WINDOWS_GNU_TARGET: x86_64-pc-windows-gnu

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Make APWorld
        run: ./make_apworld.sh

      - name: Setup Targets
        run: |
          sudo apt-get update
          
          rustup target add ${{ env.LINUX_GNU_TARGET }}

          rustup target add ${{ env.WINDOWS_GNU_TARGET }}
          sudo apt-get install -y gcc-mingw-w64-x86-64 gcc

      - name: Build Linux Binary and Zip
        run: |
          cargo build --release --target ${{ env.LINUX_GNU_TARGET }}
          zip -j ArchipelaPal-${{ env.LINUX_GNU_TARGET }}-${{ github.ref_name }}.zip ./target/${{ env.LINUX_GNU_TARGET }}/release/ArchipelaPal

      - name: Build Windows Binary and Zip
        run: |
          cargo build --release --target ${{ env.WINDOWS_GNU_TARGET }}
          zip -j ArchipelaPal-${{ env.WINDOWS_GNU_TARGET }}-${{ github.ref_name }}.zip ./target/${{ env.WINDOWS_GNU_TARGET }}/release/ArchipelaPal.exe

      - name: Create Draft GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ArchipelaPal Release ${{ github.ref }}
          draft: true
          prerelease: false
      
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ArchipelaPal-${{ env.LINUX_GNU_TARGET }}-${{ github.ref_name }}.zip
          asset_name: ArchipelaPal-${{ env.LINUX_GNU_TARGET }}-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ArchipelaPal-${{ env.WINDOWS_GNU_TARGET }}-${{ github.ref_name }}.zip
          asset_name: ArchipelaPal-${{ env.WINDOWS_GNU_TARGET }}-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload APWorld
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./archipelapal.apworld
          asset_name: archipelapal.apworld
          asset_content_type: application/zip

      - name: Upload Example YAML
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./EXAMPLE.yaml
          asset_name: EXAMPLE.yaml
          asset_content_type: text/plain
